name: Daily Clang Crawler

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  crawl-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run crawler
        run: |
          python3 -m pip install -r requirements.txt
          python3 crawler.py
        id: run_crawler
        continue-on-error: true

      - name: Check crawler output
        if: steps.run_crawler.outcome == 'success'
        run: |
          if ls clang-* && [ -f build_id ]; then
            echo "Clang prebuilt and build_id exist."
            echo "BUILD_ID=$(cat build_id)" >> $GITHUB_ENV
            mv clang-* ../
            mv build_id ../
          else
            echo "Error: Missing clang prebuilt or build_id file."
            exit 1
          fi

      - name: Check for the update branch
        continue-on-error: true
        run: |
          set +e
          git fetch origin update || echo "Failed to fetch origin/update"
          git checkout -f update || git checkout -b update

          if [ ! -e build_id ]; then
            echo "No build_id file. Creating a new one..."
            git rm -rf .
            git clean -fxd
            touch build_id
          fi

      - name: Compare build_id
        run: |
          if [ ! -s ../build_id ]; then
            exit 1
          fi
          echo "Old ID: $(cat build_id) vs New ID: $(cat ../build_id)"
          if cmp --silent build_id ../build_id; then
            echo "Build ID matches. Skipping update."
            echo "skip_update=true" >> $GITHUB_ENV
          else
            echo "Build ID differs. Proceeding to update."
            echo "skip_update=false" >> $GITHUB_ENV
          fi

      - name: Update build_id in the update branch
        if: env.skip_update == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          cp ../build_id .
          git add .
          git commit -m "Update build_id to $BUILD_ID"
          git push origin update

      - name: Upload Clang to GitHub Release
        if: env.skip_update == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.BUILD_ID }}
          name: ${{ env.BUILD_ID }}
          files: |
            ../clang-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Telegram message
        if: env.skip_update == 'false'
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            **New Clang ${{ env.BUILD_ID }}**
            URL: https://github.com/${{ github.repository }}/releases/tag/${{ env.BUILD_ID }}
          format: "markdown"

      - name: Inform about error in Telegram
        if: failure()
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Workflow run **FAILED**: [URL](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          format: "markdown"
